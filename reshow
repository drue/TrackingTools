#!/usr/bin/env python

from optparse import OptionParser
import subprocess
from mutagen.flac import FLAC
from mutagen import File

import parsedatetime.parsedatetime as pdt
import parsedatetime.parsedatetime_consts as pdc

dparse = pdt.Calendar(pdc.Constants())

def parseShow(txtshow):
    band,  date, venue, location = [n.strip() for n in txtshow.split('\n') if n]
    try:
        dtup = dparse.parseDateText(date)
        date = "%s-%02d-%02d" % dtup[0:3]
    except:
        try:
            dtup = dparse.parseDate(date)
            date = "%s-%02d-%02d" % dtup[0:3]
        except:
            pass

    return band, date, venue, location

def renameFiles(files, band, date, venue, location):
    t = 1
    location = location.replace(',','')
    for fname in files:
        if fname.endswith('flac'):
             cmd = 'metaflac --set-tag=ARTIST="%s" --set-tag=TRACKNUMBER="%s" --set-tag=ALBUM="%s %s, %s" "%s"' % (band, t,
                                                                                      date,
                                                                                      venue,
                                                                                      location,
                                                                                      fname)            
             subprocess.call(cmd, shell=True)
        elif fname.endswith('mp3') or fname.endswith('mp2'):
                        # cmd = 'id3tag --artist="%s" --album="%s %s, %s" "%s" --track=%s' % (band,
                        #                                                        date,
                        #                                                        venue,
                        #                                                        location.replace(',',''),
                        #                                                        fname,
                        #                                                                     t)
            track = File(fname, easy=True)
            track['album'] = "%s %s, %s" % (date, venue, location)
            track['artist'] = band
            track['tracknumber'] = str(t)
            track.save()
            
        print ">>>", fname, "-> %s %s %s %s, %s" % (t, band, date, venue, location)
        t += 1
        
if __name__ == "__main__":
    usage = """retitle <file1> <file2> <...>""
    Retitle reads the setlist from the pasteboard.
    """
    parser = OptionParser(usage)
    options, args = parser.parse_args()

    txtlist = subprocess.Popen(["pbpaste"], stdout=subprocess.PIPE).communicate()[0].replace('\r', '')
    band, date, venue, location = parseShow(txtlist)
    renameFiles(args, band, date, venue, location)
        
